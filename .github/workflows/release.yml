name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
    
    - name: Run tests
      run: bundle exec rspec
    
    - name: Build gem
      run: gem build *.gemspec
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: gem
        path: '*.gem'
  
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
    
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: gem
    
    - name: Publish to RubyGems
      env:
        RUBYGEMS_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}
      run: |
        mkdir -p ~/.gem
        echo "---" > ~/.gem/credentials
        echo ":rubygems_api_key: ${RUBYGEMS_API_KEY}" >> ~/.gem/credentials
        chmod 0600 ~/.gem/credentials
        gem push *.gem
        rm -f ~/.gem/credentials 
  
  github_release:
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: gem
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Extract changelog entry
      id: changelog
      run: |
        CHANGELOG_CONTENT=$(awk "/## \\[${{ steps.get_version.outputs.VERSION }}\\]/{flag=1;next}/## \\[/{flag=0}flag" CHANGELOG.md)
        echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG_CONTENT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: '*.gem'
        body: ${{ steps.changelog.outputs.CHANGELOG_CONTENT }}
        generate_release_notes: true 
